version: "3"

silent: true

vars:
  EXE: kubico{{exeExt}}
  NODE_TAG_VERSION: 18.14.0-bullseye
  NODE_NPM_VOLUME: kubico_node_npm

tasks:
  run:
    desc: Build and run the web app
    cmds:
      - go run .

  build:
    desc: Build the web app
    cmds:
      - go generate
      - go build -v -o {{.EXE}}
      - packr2 clean

  cleanup:
    desc: Cleanup
    cmds:
      - docker volume rm {{.NODE_NPM_VOLUME}} > /dev/null 2>&1 || true
      - rm -rf assets/node_modules

  go-get:
    cmds:
      - go get -u {{.REPO}}

########################################################################################################################
#
# Docker
#
########################################################################################################################

  d:build:
    desc: Build docker container
    cmds:
      - docker build --tag ilyes512/kubico-builder:fromsource-builder --file ./build/builder/Dockerfile .
      - docker build --tag ilyes512/kubico:fromsource-scratch --file ./build/scratch/Dockerfile --build-arg KUBICO_VERSION=fromsource .

  d:run:
    desc: Run the container
    deps: [d:build]
    cmds:
      - |-
        if [ -s .env ]; then
          docker run --tty --interactive --rm --publish 8080:8080 --volume $(pwd)/.env:/.env ilyes512/kubico:fromsource;
        else
          docker run --tty --interactive --rm --publish 8080:8080 ilyes512/kubico:fromsource;
        fi

########################################################################################################################
#
# NODE / NPM
#
########################################################################################################################
  node:run:
    cmds:
      - docker run
        --rm
        --interactive
        --tty
        --env npm_config_cache=/tmp/npmcache
        --user $(id -u):$(id -g)
        --volume $(pwd)/assets:/src/assets
        --volume $(pwd)/templates:/src/templates
        --workdir /src/assets
        node:{{.NODE_TAG_VERSION}} {{.RUN_CMD}}

  node:shell:
    desc: Opens up "assets"-dir in a container with NodeJS
    interactive: true
    cmds:
      - task: node:run
        vars: { RUN_CMD: bash }

  node:install:
    desc: Run "npm install"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm ci }

  node:update:
    desc: Run "npm update"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm update }

  node:dev:
    desc: Run "npm run development"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm run dev }

  node:prd:
    desc: Run "npm run production"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm run prod }
