version: "3"

silent: true

vars:
  DOCKER_REPO: ghcr.io
  DOCKER_OWNER: ilyes512
  DOCKER_IMAGE_NAME: kubico
  # Latatest version of Hadolint: https://hub.docker.com/r/hadolint/hadolint/tags or https://github.com/hadolint/hadolint/releases
  HADOLINT_TAG_VERSION: v2.12.0
  EXE: kubico{{exeExt}}
  NODE_TAG_VERSION: 18.14.0-bullseye
  NODE_NPM_VOLUME: kubico_node_npm

tasks:
  run:
    desc: Build and run the web app
    interactive: true
    cmds:
      - go run .

  build:
    desc: Build the web app
    cmds:
      - go generate
      - go build -v -o {{.EXE}}

  cleanup:
    desc: Cleanup workspace
    cmds:
      - docker volume rm {{.NODE_NPM_VOLUME}} > /dev/null 2>&1 || true
      - git clean -Xd --force

  go-get:
    cmds:
      - go get -u {{.REPO}}

########################################################################################################################
#
# Docker
#
########################################################################################################################

  d:build:
    desc: Build docker container
    deps: [d:lint]
    cmds:
      - docker build --tag {{.DOCKER_REPO}}/{{.DOCKER_OWNER}}/{{.DOCKER_IMAGE_NAME}}:debian --build-arg=GOARCH={{ARCH}} --build-arg=COMPRESS={{.COMPRESS | default 0}} --target debian .
      - docker build --tag {{.DOCKER_REPO}}/{{.DOCKER_OWNER}}/{{.DOCKER_IMAGE_NAME}}:scratch --build-arg=GOARCH={{ARCH}} --build-arg=COMPRESS={{.COMPRESS | default 0}} .

  d:run:
    desc: Run the container
    deps: [d:build]
    interactive: true
    vars:
      ENV_EXISTS:
        sh: if [ -s .env ]; then echo 1; else echo 0; fi
    cmds:
      - docker run --tty --interactive --rm --publish 8080:8080 {{if eq .ENV_EXISTS "1"}}--volume $(pwd)/.env:/.env{{end}} {{.DOCKER_REPO}}/{{.DOCKER_OWNER}}/{{.DOCKER_IMAGE_NAME}}:scratch;

  d:lint:
    desc: Apply a Dockerfile linter (https://github.com/hadolint/hadolint)
    cmds:
      - docker run
        --interactive
        --rm
        --volume $(pwd)/.hadolint.yml:/.hadolint.yml
        hadolint/hadolint:{{.HADOLINT_TAG_VERSION}}
        hadolint
        -
        < Dockerfile

########################################################################################################################
#
# NODE / NPM
#
########################################################################################################################
  node:run:
    cmds:
      - docker run
        --rm
        --interactive
        --tty
        --env npm_config_cache=/tmp/npmcache
        --user $(id -u):$(id -g)
        --volume $(pwd)/assets:/src/assets
        --volume $(pwd)/templates:/src/templates
        --workdir /src/assets
        node:{{.NODE_TAG_VERSION}} {{.RUN_CMD}}

  node:shell:
    desc: Opens up "assets"-dir in a container with NodeJS
    interactive: true
    cmds:
      - task: node:run
        vars: { RUN_CMD: bash }

  node:install:
    desc: Run "npm install"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm ci }

  node:update:
    desc: Run "npm update"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm update }

  node:dev:
    desc: Run "npm run development"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm run dev }

  node:prd:
    desc: Run "npm run production"
    cmds:
      - task: node:run
        vars: { RUN_CMD: npm run prod }
